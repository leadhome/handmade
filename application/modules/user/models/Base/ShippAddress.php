<?php

/**
 * User_Model_Base_ShippAddress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $shippAddress_id
 * @property integer $user_id
 * @property string $firstname
 * @property string $lastname
 * @property string $midname
 * @property string $address
 * @property integer $city_id
 * @property integer $region_id
 * @property integer $postal_code
 * @property integer $country_id
 * @property string $phone
 * @property User_Model_User $user
 * @property User_Model_City $city
 * @property User_Model_Region $region
 * @property User_Model_Country $country
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class User_Model_Base_ShippAddress extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('User__Model__ShippAddress');
        $this->hasColumn('shippAddress_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('firstname', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('lastname', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('midname', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('city_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('region_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('postal_code', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('phone', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             ));


        $this->index('SA_User', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->index('SA_City', array(
             'fields' => 
             array(
              0 => 'city_id',
             ),
             ));
        $this->index('SA_Region', array(
             'fields' => 
             array(
              0 => 'region_id',
             ),
             ));
        $this->index('SA_Country', array(
             'fields' => 
             array(
              0 => 'country_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User_Model_User as user', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));

        $this->hasOne('User_Model_City as city', array(
             'local' => 'city_id',
             'foreign' => 'city_id'));

        $this->hasOne('User_Model_Region as region', array(
             'local' => 'region_id',
             'foreign' => 'region_id'));

        $this->hasOne('User_Model_Country as country', array(
             'local' => 'country_id',
             'foreign' => 'country_id'));
    }
}