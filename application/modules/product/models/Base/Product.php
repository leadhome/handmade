<?php

/**
 * Product_Model_Base_Product
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $product_id
 * @property timestamp $date_created
 * @property integer $category_id
 * @property integer $user_id
 * @property string $title
 * @property clob $description
 * @property string $production_time
 * @property string $size
 * @property integer $price
 * @property clob $photos
 * @property integer $availlable_id
 * @property integer $quantity
 * @property boolean $published
 * @property integer $view
 * @property User_Model_User $User
 * @property Product_Model_Availlable $Availlable
 * @property Product_Model_Category $Category
 * @property Doctrine_Collection $User__Model__Comments
 * @property Doctrine_Collection $Product__Model__MaterialProducts
 * @property Doctrine_Collection $Product__Model__TagProducts
 * @property Doctrine_Collection $Product__Model__ColorProducts
 * @property Doctrine_Collection $Product__Model__SizeProducts
 * @property Doctrine_Collection $User__Model__FavoriteProducts
 * @property Doctrine_Collection $Product__Model__EventProducts
 * @property Doctrine_Collection $Banner__Model__Mains
 * @property Doctrine_Collection $Product__Model__EditorsChoices
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Product_Model_Base_Product extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Product__Model__Products');
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('date_created', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('description', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('production_time', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('size', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('price', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('photos', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('availlable_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('quantity', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('published', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('view', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));


        $this->index('P_User', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->index('P_Available', array(
             'fields' => 
             array(
              0 => 'availlable_id',
             ),
             ));
        $this->index('P_Category', array(
             'fields' => 
             array(
              0 => 'category_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User_Model_User as User', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));

        $this->hasOne('Product_Model_Availlable as Availlable', array(
             'local' => 'availlable_id',
             'foreign' => 'availlable_id'));

        $this->hasOne('Product_Model_Category as Category', array(
             'local' => 'category_id',
             'foreign' => 'category_id'));

        $this->hasMany('User_Model_Comment as User__Model__Comments', array(
             'local' => 'product_id',
             'foreign' => 'product_id'));

        $this->hasMany('Product_Model_MaterialProduct as Product__Model__MaterialProducts', array(
             'local' => 'product_id',
             'foreign' => 'product_id'));

        $this->hasMany('Product_Model_TagProduct as Product__Model__TagProducts', array(
             'local' => 'product_id',
             'foreign' => 'product_id'));

        $this->hasMany('Product_Model_ColorProduct as Product__Model__ColorProducts', array(
             'local' => 'product_id',
             'foreign' => 'product_id'));

        $this->hasMany('Product_Model_SizeProduct as Product__Model__SizeProducts', array(
             'local' => 'product_id',
             'foreign' => 'product_id'));

        $this->hasMany('User_Model_FavoriteProduct as User__Model__FavoriteProducts', array(
             'local' => 'product_id',
             'foreign' => 'product_id'));

        $this->hasMany('Product_Model_EventProduct as Product__Model__EventProducts', array(
             'local' => 'product_id',
             'foreign' => 'product_id'));

        $this->hasMany('Banner_Model_Main as Banner__Model__Mains', array(
             'local' => 'product_id',
             'foreign' => 'product_id'));

        $this->hasMany('Product_Model_EditorsChoice as Product__Model__EditorsChoices', array(
             'local' => 'product_id',
             'foreign' => 'product_id'));
    }
}