<?php

/**
 * Product_Model_Base_Category
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $title
 * @property integer $parent_id
 * @property Product_Model_Category $Parents
 * @property Product_Model_Category $Childrens
 * @property Doctrine_Collection $Product__Model__Products
 * @property Doctrine_Collection $Product__Model__Sizes
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Product_Model_Base_Category extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Product__Model__Categories');
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));


        $this->index('C_Category', array(
             'fields' => 
             array(
              0 => 'parent_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product_Model_Category as Parents', array(
             'local' => 'parent_id',
             'foreign' => 'category_id'));

        $this->hasOne('Product_Model_Category as Childrens', array(
             'local' => 'category_id',
             'foreign' => 'parent_id'));

        $this->hasMany('Product_Model_Product as Product__Model__Products', array(
             'local' => 'category_id',
             'foreign' => 'category_id'));

        $this->hasMany('Product_Model_Size as Product__Model__Sizes', array(
             'local' => 'category_id',
             'foreign' => 'category_id'));
    }
}